== 1.5.2 2018-04-10

* Bugfix
  - BinNum#to_f overflow

== 1.5.1 2017-02-28

* Bugfix & optimizations
  - Num#to_f, BinNum#to_f are more accurate now
  - Optimized Num#digits using Ruby 2.4 Integer#digits
  - Optimized number_of_digits using Ruby 2.1 Integer#bit_length
  - round interface is compatible with Ruby 2.4 options

== 1.5.0 2015-04-06

* New feature
  - normalized attribute of context applies normalization to all results

== 1.4.7 2015-04-05

* Bugfix
  - The normalize method used the default context

== 1.4.6 2015-03-07

* Bugfix
  - BigDecimal.context.copy_sign returned a Float

== 1.4.5 2015-03-04

* New feature
  - options :simplified, :exact and :format added to Num#to_s, Num#format

== 1.4.4 2015-03-03

* Bugfix
  - Context#Num() didn't honor the context (only the radix)

== 1.4.3 2014-11-02

* New features
  - operator [] for contexts (define new context based on it)
  - new Context#special? method

* Bugfixed
  - some bugs related to BigDecimal

== 1.4.2 2014-10-30

  Change definition of numbers in :free mode with no change of base involved.

== 1.4.1 2014-10-29

  Minor correction to allow partially requiring some files

== 1.4.0 2014-10-29

* New features
  - Rationalization

== 1.3.4 2014-10-27

* New features
  - Context methods necessary_digits and representable_digits
  - Assign :exact as the precision value to define an :exact context
  - Constructors for nan, infinite, zero replicated in context
  - Hexadecimal (%A) representation of binary floating point numbers
  - Support.adjust_digits (to be used in Numerals gem)

== 1.3.3 2014-10-13

  Formatter has a new raise_on_repeat options
  (added to be used in new Numerals gem)

== 1.3.2 2014-10-07

  logb now complies with the context precision

== 1.3.1 2014-05-19

  Removed dependencies: Jeweler, Shoulda; using Gemfile

== 1.3.0 2010-06-22

* New features
  - Complex math
  - Hyperbolic trigonometry

* Bugfixes
  - Num.context use was counter-intuitive
  - Various math corrections

== 1.2.1 2010-06-16

* New features
  - Trigonometry for BinNum and reorganization of Math modules.

* Bugfixes
  - Context#elimit= didn't work
  - atan could be inaccurate for small arguments
  - asin could be inaccurate for arguments near 1

== 1.2.0 2010-06-15

* New Features
  - Trigonometry in radians/degrees/gradians

== 1.1.2 2010-06-01

* New Features
  - New DecNum literal syntax 3._14 defined in flt/sugar

* Bugfixes
  - fix Flt::Support::Reader#read()

== 1.1.1 2009-11-30

* New Features:
  - Math.hypot

* Bugfixes
  - atan2 was missing from DecNum context

== 1.1.0 2009-11-30

* New Features:
  - Access Math functions through context
  - Enhanced compatibility with Float
  - Enhanced DecNum trigonometry
  - Context eval method
  - New methods integer_part(), fraction_part()

* Maintenance changes:
  - Minor internal refactoring.
  - Avoid some warnings on Ruby 1.9
  - Better documentation

* Bugfixes:
  - local context blocks didn't restore previous context on return or exceptions,
  - Tolerance fix for near zero numbers
  - Other internal problems

== 1.0.0 2009-08-05

* First release of the new Flt project (derived from the former Ruby-Decimal.)
  - New gem name: flt
  - New organization in Flt namespace
  - Arbitrary base support; Flt::DecNum replaces Decimal; new classes BinNum, Num[b].
  - Tolerance objects to define floating-point tolerances.
  - Free and fixed input/output formats.
  - Contexts for Float and BigDecimal compatibility with Flt::Num

== 0.2.2 2009-07-21

* Bug fixes:
  - Decimal#normal? was incorrect for special values and zero.
  - After a local context, the global context was set to a copy of the original
    context, so any previously stored reference to it was now unbound.
  - Context#normalize was incorrect.

== 0.2.1 2009-06-23

* Bug fixes:
  - DecNum#inspect was always producing debug information; now it uses $DEBUG
  - Raising some exceptions caused error, because too many parameters were being
    passed to the exception's base class initializer.

* New functionality:
  - ulp (unit in the last place)
  - normalize (in the classic sense, not in the original GDA sense)
  - maximum_finite, minimum_normal, minimum_nonzero value decimal constructors
  - epsilon, strict_epsilon, half_epsilon
  - setting context exponent limits with elimit
  - require decimal/shortcut to use D for DecNum

== 0.2.0 2009-06-21

* New functions implemented:
  exp(), ln(), log10(), power().

== 0.1.0 2009-06-19

* Initial release as ruby-decimal
